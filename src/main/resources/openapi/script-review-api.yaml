openapi: 3.0.3
info:
  title: Script Review API
  version: 1.0.0
  description: API for film script submission and tracking

servers:
  - url: https://mock.scriptreview.api
    description: Mock server for front-end testing

tags:
  - name: Scripts
    description: Endpoints for script submission and tracking

  - name: Authentication
    description: Endpoints for user login and token management

paths:
  /scripts:
    post:
      tags:
        - Scripts
      summary: Submit a new script
      operationId: submitScript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptRequest'
            examples:
              validRequest:
                summary: Valid submission
                value:
                  title: "A Great Journey"
                  content: "Once upon a time in a world of wonders..."
                  client:
                    name: "Jane Doe"
                    email: "jane@example.com"
                    phone: "123456789"
      responses:
        '201':
          description: Script submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptResponse'
              examples:
                success:
                  summary: Script submission response
                  value:
                    id: 1
                    status: AWAITING_ANALYSIS

  /scripts/{id}/status:
    get:
      tags:
        - Scripts
      summary: Get script status by ID
      operationId: getScriptStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Script status returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptStatus'
              examples:
                found:
                  summary: Script found
                  value: AWAITING_ANALYSIS
        '404':
          description: Script not found

    put:
      tags:
        - Scripts
      summary: Update script status
      operationId: updateScriptStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/ScriptStatus'
            example:
              status: IN_ANALYSIS
      responses:
        '204':
          description: Status updated successfully
        '400':
          description: Invalid status transition
        '404':
          description: Script not found

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticates user and returns JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequestDTO'
            example:
              email: analyst@cooperfilme.com
              password: 123456
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseDTO'
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Unauthorized

components:
  schemas:
    ScriptRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        client:
          $ref: '#/components/schemas/Client'
      required:
        - title
        - content
        - client

    ScriptResponse:
      type: object
      properties:
        id:
          type: integer
        status:
          $ref: '#/components/schemas/ScriptStatus'

    ScriptStatus:
      type: string
      enum:
        - AWAITING_ANALYSIS
        - IN_ANALYSIS
        - AWAITING_REVIEW
        - IN_REVIEW
        - AWAITING_APPROVAL
        - IN_APPROVAL
        - APPROVED
        - REJECTED

    Client:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
        - name
        - email
        - phone

    AuthRequestDTO:
      type: object
      properties:
        email:
          type: string
          example: analyst@cooperfilme.com
        password:
          type: string
          example: 123456

    AuthResponseDTO:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."